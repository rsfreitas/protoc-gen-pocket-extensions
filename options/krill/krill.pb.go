// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.7.1
// source: krill.proto

package krill

import (
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HttpAuthenticationType int32

const (
	HttpAuthenticationType_HTTP_AUTHENTICATION_TYPE_UNSPECIFIED HttpAuthenticationType = 0
	HttpAuthenticationType_HTTP_AUTHENTICATION_TYPE_BEARER      HttpAuthenticationType = 1
)

// Enum value maps for HttpAuthenticationType.
var (
	HttpAuthenticationType_name = map[int32]string{
		0: "HTTP_AUTHENTICATION_TYPE_UNSPECIFIED",
		1: "HTTP_AUTHENTICATION_TYPE_BEARER",
	}
	HttpAuthenticationType_value = map[string]int32{
		"HTTP_AUTHENTICATION_TYPE_UNSPECIFIED": 0,
		"HTTP_AUTHENTICATION_TYPE_BEARER":      1,
	}
)

func (x HttpAuthenticationType) Enum() *HttpAuthenticationType {
	p := new(HttpAuthenticationType)
	*p = x
	return p
}

func (x HttpAuthenticationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpAuthenticationType) Descriptor() protoreflect.EnumDescriptor {
	return file_krill_proto_enumTypes[0].Descriptor()
}

func (HttpAuthenticationType) Type() protoreflect.EnumType {
	return &file_krill_proto_enumTypes[0]
}

func (x HttpAuthenticationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *HttpAuthenticationType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = HttpAuthenticationType(num)
	return nil
}

// Deprecated: Use HttpAuthenticationType.Descriptor instead.
func (HttpAuthenticationType) EnumDescriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{0}
}

type ParameterType int32

const (
	ParameterType_PARAMETER_TYPE_UNSPECIFIED ParameterType = 0
	ParameterType_PARAMETER_TYPE_STRING      ParameterType = 1
	ParameterType_PARAMETER_TYPE_NUMBER      ParameterType = 2
)

// Enum value maps for ParameterType.
var (
	ParameterType_name = map[int32]string{
		0: "PARAMETER_TYPE_UNSPECIFIED",
		1: "PARAMETER_TYPE_STRING",
		2: "PARAMETER_TYPE_NUMBER",
	}
	ParameterType_value = map[string]int32{
		"PARAMETER_TYPE_UNSPECIFIED": 0,
		"PARAMETER_TYPE_STRING":      1,
		"PARAMETER_TYPE_NUMBER":      2,
	}
)

func (x ParameterType) Enum() *ParameterType {
	p := new(ParameterType)
	*p = x
	return p
}

func (x ParameterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParameterType) Descriptor() protoreflect.EnumDescriptor {
	return file_krill_proto_enumTypes[1].Descriptor()
}

func (ParameterType) Type() protoreflect.EnumType {
	return &file_krill_proto_enumTypes[1]
}

func (x ParameterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ParameterType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ParameterType(num)
	return nil
}

// Deprecated: Use ParameterType.Descriptor instead.
func (ParameterType) EnumDescriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{1}
}

type ResponseCode int32

const (
	ResponseCode_RESPONSE_CODE_OK                  ResponseCode = 0
	ResponseCode_RESPONSE_CODE_NOT_FOUND           ResponseCode = 1
	ResponseCode_RESPONSE_CODE_UNAUTHORIZED        ResponseCode = 2
	ResponseCode_RESPONSE_CODE_BAD_REQUEST         ResponseCode = 3
	ResponseCode_RESPONSE_CODE_PRECONDITION_FAILED ResponseCode = 4
	ResponseCode_RESPONSE_CODE_INTERNAL_ERROR      ResponseCode = 5
)

// Enum value maps for ResponseCode.
var (
	ResponseCode_name = map[int32]string{
		0: "RESPONSE_CODE_OK",
		1: "RESPONSE_CODE_NOT_FOUND",
		2: "RESPONSE_CODE_UNAUTHORIZED",
		3: "RESPONSE_CODE_BAD_REQUEST",
		4: "RESPONSE_CODE_PRECONDITION_FAILED",
		5: "RESPONSE_CODE_INTERNAL_ERROR",
	}
	ResponseCode_value = map[string]int32{
		"RESPONSE_CODE_OK":                  0,
		"RESPONSE_CODE_NOT_FOUND":           1,
		"RESPONSE_CODE_UNAUTHORIZED":        2,
		"RESPONSE_CODE_BAD_REQUEST":         3,
		"RESPONSE_CODE_PRECONDITION_FAILED": 4,
		"RESPONSE_CODE_INTERNAL_ERROR":      5,
	}
)

func (x ResponseCode) Enum() *ResponseCode {
	p := new(ResponseCode)
	*p = x
	return p
}

func (x ResponseCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseCode) Descriptor() protoreflect.EnumDescriptor {
	return file_krill_proto_enumTypes[2].Descriptor()
}

func (ResponseCode) Type() protoreflect.EnumType {
	return &file_krill_proto_enumTypes[2]
}

func (x ResponseCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ResponseCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ResponseCode(num)
	return nil
}

// Deprecated: Use ResponseCode.Descriptor instead.
func (ResponseCode) EnumDescriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{2}
}

type PropertyFormat int32

const (
	PropertyFormat_PROPERTY_FORMAT_UNSPECIFIED PropertyFormat = 0
	PropertyFormat_PROPERTY_FORMAT_INT32       PropertyFormat = 1
	PropertyFormat_PROPERTY_FORMAT_INT64       PropertyFormat = 2
	PropertyFormat_PROPERTY_FORMAT_FLOAT       PropertyFormat = 3
	PropertyFormat_PROPERTY_FORMAT_DOUBLE      PropertyFormat = 4
	PropertyFormat_PROPERTY_FORMAT_BYTE        PropertyFormat = 5
	PropertyFormat_PROPERTY_FORMAT_BINARY      PropertyFormat = 6
	PropertyFormat_PROPERTY_FORMAT_DATE        PropertyFormat = 7
	PropertyFormat_PROPERTY_FORMAT_DATE_TIME   PropertyFormat = 8
	PropertyFormat_PROPERTY_FORMAT_PASSWORD    PropertyFormat = 9
)

// Enum value maps for PropertyFormat.
var (
	PropertyFormat_name = map[int32]string{
		0: "PROPERTY_FORMAT_UNSPECIFIED",
		1: "PROPERTY_FORMAT_INT32",
		2: "PROPERTY_FORMAT_INT64",
		3: "PROPERTY_FORMAT_FLOAT",
		4: "PROPERTY_FORMAT_DOUBLE",
		5: "PROPERTY_FORMAT_BYTE",
		6: "PROPERTY_FORMAT_BINARY",
		7: "PROPERTY_FORMAT_DATE",
		8: "PROPERTY_FORMAT_DATE_TIME",
		9: "PROPERTY_FORMAT_PASSWORD",
	}
	PropertyFormat_value = map[string]int32{
		"PROPERTY_FORMAT_UNSPECIFIED": 0,
		"PROPERTY_FORMAT_INT32":       1,
		"PROPERTY_FORMAT_INT64":       2,
		"PROPERTY_FORMAT_FLOAT":       3,
		"PROPERTY_FORMAT_DOUBLE":      4,
		"PROPERTY_FORMAT_BYTE":        5,
		"PROPERTY_FORMAT_BINARY":      6,
		"PROPERTY_FORMAT_DATE":        7,
		"PROPERTY_FORMAT_DATE_TIME":   8,
		"PROPERTY_FORMAT_PASSWORD":    9,
	}
)

func (x PropertyFormat) Enum() *PropertyFormat {
	p := new(PropertyFormat)
	*p = x
	return p
}

func (x PropertyFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PropertyFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_krill_proto_enumTypes[3].Descriptor()
}

func (PropertyFormat) Type() protoreflect.EnumType {
	return &file_krill_proto_enumTypes[3]
}

func (x PropertyFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PropertyFormat) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PropertyFormat(num)
	return nil
}

// Deprecated: Use PropertyFormat.Descriptor instead.
func (PropertyFormat) EnumDescriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{3}
}

type Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *Database) Reset() {
	*x = Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database) ProtoMessage() {}

func (x *Database) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database.ProtoReflect.Descriptor instead.
func (*Database) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{0}
}

func (x *Database) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Http *ServiceHttp `protobuf:"bytes,1,opt,name=http" json:"http,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{1}
}

func (x *Service) GetHttp() *ServiceHttp {
	if x != nil {
		return x.Http
	}
	return nil
}

type Method struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Http *MethodHttp `protobuf:"bytes,1,opt,name=http" json:"http,omitempty"`
}

func (x *Method) Reset() {
	*x = Method{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Method) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Method) ProtoMessage() {}

func (x *Method) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Method.ProtoReflect.Descriptor instead.
func (*Method) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{2}
}

func (x *Method) GetHttp() *MethodHttp {
	if x != nil {
		return x.Http
	}
	return nil
}

type MethodHttp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *bool        `protobuf:"varint,1,opt,name=auth" json:"auth,omitempty"`
	Scope  []string     `protobuf:"bytes,2,rep,name=scope" json:"scope,omitempty"`
	Header []*Parameter `protobuf:"bytes,3,rep,name=header" json:"header,omitempty"`
}

func (x *MethodHttp) Reset() {
	*x = MethodHttp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodHttp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodHttp) ProtoMessage() {}

func (x *MethodHttp) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodHttp.ProtoReflect.Descriptor instead.
func (*MethodHttp) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{3}
}

func (x *MethodHttp) GetAuth() bool {
	if x != nil && x.Auth != nil {
		return *x.Auth
	}
	return false
}

func (x *MethodHttp) GetScope() []string {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *MethodHttp) GetHeader() []*Parameter {
	if x != nil {
		return x.Header
	}
	return nil
}

type ServiceHttp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authentication *ServiceAuthentication `protobuf:"bytes,1,opt,name=authentication" json:"authentication,omitempty"`
	Header         []*Parameter           `protobuf:"bytes,2,rep,name=header" json:"header,omitempty"`
}

func (x *ServiceHttp) Reset() {
	*x = ServiceHttp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceHttp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceHttp) ProtoMessage() {}

func (x *ServiceHttp) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceHttp.ProtoReflect.Descriptor instead.
func (*ServiceHttp) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceHttp) GetAuthentication() *ServiceAuthentication {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *ServiceHttp) GetHeader() []*Parameter {
	if x != nil {
		return x.Header
	}
	return nil
}

type ServiceAuthentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *HttpAuthenticationType `protobuf:"varint,1,opt,name=type,enum=krill.HttpAuthenticationType" json:"type,omitempty"`
}

func (x *ServiceAuthentication) Reset() {
	*x = ServiceAuthentication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAuthentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAuthentication) ProtoMessage() {}

func (x *ServiceAuthentication) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAuthentication.ProtoReflect.Descriptor instead.
func (*ServiceAuthentication) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{5}
}

func (x *ServiceAuthentication) GetType() HttpAuthenticationType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return HttpAuthenticationType_HTTP_AUTHENTICATION_TYPE_UNSPECIFIED
}

type Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string        `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Type     *ParameterType `protobuf:"varint,2,opt,name=type,enum=krill.ParameterType" json:"type,omitempty"`
	Required *bool          `protobuf:"varint,3,opt,name=required" json:"required,omitempty"`
}

func (x *Parameter) Reset() {
	*x = Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter) ProtoMessage() {}

func (x *Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter.ProtoReflect.Descriptor instead.
func (*Parameter) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{6}
}

func (x *Parameter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Parameter) GetType() ParameterType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ParameterType_PARAMETER_TYPE_UNSPECIFIED
}

func (x *Parameter) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

type OpenapiMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     *Path       `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Response []*Response `protobuf:"bytes,2,rep,name=response" json:"response,omitempty"`
}

func (x *OpenapiMethod) Reset() {
	*x = OpenapiMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenapiMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenapiMethod) ProtoMessage() {}

func (x *OpenapiMethod) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenapiMethod.ProtoReflect.Descriptor instead.
func (*OpenapiMethod) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{7}
}

func (x *OpenapiMethod) GetPath() *Path {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *OpenapiMethod) GetResponse() []*Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary     *string  `protobuf:"bytes,1,req,name=summary" json:"summary,omitempty"`
	Description *string  `protobuf:"bytes,2,req,name=description" json:"description,omitempty"`
	Tags        []string `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
}

func (x *Path) Reset() {
	*x = Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{8}
}

func (x *Path) GetSummary() string {
	if x != nil && x.Summary != nil {
		return *x.Summary
	}
	return ""
}

func (x *Path) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Path) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        *ResponseCode `protobuf:"varint,1,req,name=code,enum=krill.ResponseCode" json:"code,omitempty"`
	Description *string       `protobuf:"bytes,2,req,name=description" json:"description,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{9}
}

func (x *Response) GetCode() ResponseCode {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ResponseCode_RESPONSE_CODE_OK
}

func (x *Response) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type OpenapiMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation *Operation `protobuf:"bytes,1,req,name=operation" json:"operation,omitempty"`
}

func (x *OpenapiMessage) Reset() {
	*x = OpenapiMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenapiMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenapiMessage) ProtoMessage() {}

func (x *OpenapiMessage) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenapiMessage.ProtoReflect.Descriptor instead.
func (*OpenapiMessage) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{10}
}

func (x *OpenapiMessage) GetOperation() *Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBody *RequestBody `protobuf:"bytes,1,req,name=request_body,json=requestBody" json:"request_body,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{11}
}

func (x *Operation) GetRequestBody() *RequestBody {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

type RequestBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *string `protobuf:"bytes,1,req,name=description" json:"description,omitempty"`
}

func (x *RequestBody) Reset() {
	*x = RequestBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestBody) ProtoMessage() {}

func (x *RequestBody) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestBody.ProtoReflect.Descriptor instead.
func (*RequestBody) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{12}
}

func (x *RequestBody) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type OpenapiField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Property *Property `protobuf:"bytes,1,req,name=property" json:"property,omitempty"`
}

func (x *OpenapiField) Reset() {
	*x = OpenapiField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenapiField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenapiField) ProtoMessage() {}

func (x *OpenapiField) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenapiField.ProtoReflect.Descriptor instead.
func (*OpenapiField) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{13}
}

func (x *OpenapiField) GetProperty() *Property {
	if x != nil {
		return x.Property
	}
	return nil
}

type Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description    *string         `protobuf:"bytes,1,req,name=description" json:"description,omitempty"`
	Example        *string         `protobuf:"bytes,2,opt,name=example" json:"example,omitempty"`
	Format         *PropertyFormat `protobuf:"varint,3,req,name=format,enum=krill.PropertyFormat" json:"format,omitempty"`
	HideFromSchema *bool           `protobuf:"varint,4,opt,name=hide_from_schema,json=hideFromSchema" json:"hide_from_schema,omitempty"`
}

func (x *Property) Reset() {
	*x = Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{14}
}

func (x *Property) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Property) GetExample() string {
	if x != nil && x.Example != nil {
		return *x.Example
	}
	return ""
}

func (x *Property) GetFormat() PropertyFormat {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return PropertyFormat_PROPERTY_FORMAT_UNSPECIFIED
}

func (x *Property) GetHideFromSchema() bool {
	if x != nil && x.HideFromSchema != nil {
		return *x.HideFromSchema
	}
	return false
}

var file_krill_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.FileOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         66041,
		Name:          "krill.krill_app_name",
		Tag:           "bytes,66041,opt,name=krill_app_name",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptor.ServiceOptions)(nil),
		ExtensionType: (*Service)(nil),
		Field:         66041,
		Name:          "krill.service",
		Tag:           "bytes,66041,opt,name=service",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptor.MethodOptions)(nil),
		ExtensionType: (*Method)(nil),
		Field:         66041,
		Name:          "krill.method",
		Tag:           "bytes,66041,opt,name=method",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptor.MethodOptions)(nil),
		ExtensionType: (*OpenapiMethod)(nil),
		Field:         66042,
		Name:          "krill.openapi_method",
		Tag:           "bytes,66042,opt,name=openapi_method",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*OpenapiMessage)(nil),
		Field:         66041,
		Name:          "krill.openapi_message",
		Tag:           "bytes,66041,opt,name=openapi_message",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*Database)(nil),
		Field:         66041,
		Name:          "krill.database",
		Tag:           "bytes,66041,opt,name=database",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*OpenapiField)(nil),
		Field:         66042,
		Name:          "krill.openapi",
		Tag:           "bytes,66042,opt,name=openapi",
		Filename:      "krill.proto",
	},
}

// Extension fields to descriptor.FileOptions.
var (
	// optional string krill_app_name = 66041;
	E_KrillAppName = &file_krill_proto_extTypes[0]
)

// Extension fields to descriptor.ServiceOptions.
var (
	// optional krill.Service service = 66041;
	E_Service = &file_krill_proto_extTypes[1]
)

// Extension fields to descriptor.MethodOptions.
var (
	// optional krill.Method method = 66041;
	E_Method = &file_krill_proto_extTypes[2]
	// optional krill.OpenapiMethod openapi_method = 66042;
	E_OpenapiMethod = &file_krill_proto_extTypes[3]
)

// Extension fields to descriptor.MessageOptions.
var (
	// optional krill.OpenapiMessage openapi_message = 66041;
	E_OpenapiMessage = &file_krill_proto_extTypes[4]
)

// Extension fields to descriptor.FieldOptions.
var (
	// optional krill.Database database = 66041;
	E_Database = &file_krill_proto_extTypes[5]
	// optional krill.OpenapiField openapi = 66042;
	E_Openapi = &file_krill_proto_extTypes[6]
)

var File_krill_proto protoreflect.FileDescriptor

var file_krill_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6b,
	0x72, 0x69, 0x6c, 0x6c, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48,
	0x74, 0x74, 0x70, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x22, 0x2f, 0x0a, 0x06, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x48, 0x74, 0x74, 0x70, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x22, 0x60, 0x0a, 0x0a, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x48, 0x74, 0x74, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x7d, 0x0a, 0x0b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x74, 0x74, 0x70, 0x12, 0x44, 0x0a, 0x0e, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x15, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x65, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x5d,
	0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x1f, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x2b, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x0a,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x55, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x0e,
	0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42,
	0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f,
	0x64, 0x79, 0x22, 0x2f, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x3b, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x22, 0x9f, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6b, 0x72, 0x69, 0x6c,
	0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x69, 0x64, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x68, 0x69, 0x64, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2a, 0x67, 0x0a, 0x16, 0x48, 0x74, 0x74, 0x70, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x24,
	0x48, 0x54, 0x54, 0x50, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x42, 0x45, 0x41, 0x52, 0x45, 0x52, 0x10, 0x01, 0x2a, 0x65, 0x0a, 0x0d, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52,
	0x10, 0x02, 0x2a, 0xc9, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52,
	0x49, 0x5a, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x10, 0x03, 0x12, 0x25, 0x0a, 0x21, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x2a, 0xab,
	0x02, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f,
	0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x01, 0x12, 0x19, 0x0a,
	0x15, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
	0x5f, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x50,
	0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x46, 0x4c, 0x4f, 0x41,
	0x54, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x12,
	0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f,
	0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x42, 0x49, 0x4e,
	0x41, 0x52, 0x59, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54,
	0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x07, 0x12,
	0x1d, 0x0a, 0x19, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x08, 0x12, 0x1c,
	0x0a, 0x18, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41,
	0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x09, 0x3a, 0x44, 0x0a, 0x0e,
	0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf9, 0x83, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x3a, 0x4b, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf9,
	0x83, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a,
	0x47, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf9, 0x83, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x5d, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfa, 0x83, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x61, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf9, 0x83, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x4c, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf9, 0x83, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x3a, 0x4e, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xfa, 0x83, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x72, 0x69,
	0x6c, 0x6c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x07, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x73, 0x66, 0x72, 0x65, 0x69, 0x74, 0x61, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6b, 0x72, 0x69, 0x6c,
	0x6c, 0x2d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x3b, 0x6b, 0x72, 0x69, 0x6c, 0x6c,
}

var (
	file_krill_proto_rawDescOnce sync.Once
	file_krill_proto_rawDescData = file_krill_proto_rawDesc
)

func file_krill_proto_rawDescGZIP() []byte {
	file_krill_proto_rawDescOnce.Do(func() {
		file_krill_proto_rawDescData = protoimpl.X.CompressGZIP(file_krill_proto_rawDescData)
	})
	return file_krill_proto_rawDescData
}

var file_krill_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_krill_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_krill_proto_goTypes = []interface{}{
	(HttpAuthenticationType)(0),       // 0: krill.HttpAuthenticationType
	(ParameterType)(0),                // 1: krill.ParameterType
	(ResponseCode)(0),                 // 2: krill.ResponseCode
	(PropertyFormat)(0),               // 3: krill.PropertyFormat
	(*Database)(nil),                  // 4: krill.Database
	(*Service)(nil),                   // 5: krill.Service
	(*Method)(nil),                    // 6: krill.Method
	(*MethodHttp)(nil),                // 7: krill.MethodHttp
	(*ServiceHttp)(nil),               // 8: krill.ServiceHttp
	(*ServiceAuthentication)(nil),     // 9: krill.ServiceAuthentication
	(*Parameter)(nil),                 // 10: krill.Parameter
	(*OpenapiMethod)(nil),             // 11: krill.OpenapiMethod
	(*Path)(nil),                      // 12: krill.Path
	(*Response)(nil),                  // 13: krill.Response
	(*OpenapiMessage)(nil),            // 14: krill.OpenapiMessage
	(*Operation)(nil),                 // 15: krill.Operation
	(*RequestBody)(nil),               // 16: krill.RequestBody
	(*OpenapiField)(nil),              // 17: krill.OpenapiField
	(*Property)(nil),                  // 18: krill.Property
	(*descriptor.FileOptions)(nil),    // 19: google.protobuf.FileOptions
	(*descriptor.ServiceOptions)(nil), // 20: google.protobuf.ServiceOptions
	(*descriptor.MethodOptions)(nil),  // 21: google.protobuf.MethodOptions
	(*descriptor.MessageOptions)(nil), // 22: google.protobuf.MessageOptions
	(*descriptor.FieldOptions)(nil),   // 23: google.protobuf.FieldOptions
}
var file_krill_proto_depIdxs = []int32{
	8,  // 0: krill.Service.http:type_name -> krill.ServiceHttp
	7,  // 1: krill.Method.http:type_name -> krill.MethodHttp
	10, // 2: krill.MethodHttp.header:type_name -> krill.Parameter
	9,  // 3: krill.ServiceHttp.authentication:type_name -> krill.ServiceAuthentication
	10, // 4: krill.ServiceHttp.header:type_name -> krill.Parameter
	0,  // 5: krill.ServiceAuthentication.type:type_name -> krill.HttpAuthenticationType
	1,  // 6: krill.Parameter.type:type_name -> krill.ParameterType
	12, // 7: krill.OpenapiMethod.path:type_name -> krill.Path
	13, // 8: krill.OpenapiMethod.response:type_name -> krill.Response
	2,  // 9: krill.Response.code:type_name -> krill.ResponseCode
	15, // 10: krill.OpenapiMessage.operation:type_name -> krill.Operation
	16, // 11: krill.Operation.request_body:type_name -> krill.RequestBody
	18, // 12: krill.OpenapiField.property:type_name -> krill.Property
	3,  // 13: krill.Property.format:type_name -> krill.PropertyFormat
	19, // 14: krill.krill_app_name:extendee -> google.protobuf.FileOptions
	20, // 15: krill.service:extendee -> google.protobuf.ServiceOptions
	21, // 16: krill.method:extendee -> google.protobuf.MethodOptions
	21, // 17: krill.openapi_method:extendee -> google.protobuf.MethodOptions
	22, // 18: krill.openapi_message:extendee -> google.protobuf.MessageOptions
	23, // 19: krill.database:extendee -> google.protobuf.FieldOptions
	23, // 20: krill.openapi:extendee -> google.protobuf.FieldOptions
	5,  // 21: krill.service:type_name -> krill.Service
	6,  // 22: krill.method:type_name -> krill.Method
	11, // 23: krill.openapi_method:type_name -> krill.OpenapiMethod
	14, // 24: krill.openapi_message:type_name -> krill.OpenapiMessage
	4,  // 25: krill.database:type_name -> krill.Database
	17, // 26: krill.openapi:type_name -> krill.OpenapiField
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	21, // [21:27] is the sub-list for extension type_name
	14, // [14:21] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_krill_proto_init() }
func file_krill_proto_init() {
	if File_krill_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_krill_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Method); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MethodHttp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceHttp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceAuthentication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenapiMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenapiMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenapiField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_krill_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   15,
			NumExtensions: 7,
			NumServices:   0,
		},
		GoTypes:           file_krill_proto_goTypes,
		DependencyIndexes: file_krill_proto_depIdxs,
		EnumInfos:         file_krill_proto_enumTypes,
		MessageInfos:      file_krill_proto_msgTypes,
		ExtensionInfos:    file_krill_proto_extTypes,
	}.Build()
	File_krill_proto = out.File
	file_krill_proto_rawDesc = nil
	file_krill_proto_goTypes = nil
	file_krill_proto_depIdxs = nil
}

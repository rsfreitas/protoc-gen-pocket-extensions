// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: krill.proto

package krill

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SecuritySchemeType int32

const (
	SecuritySchemeType_SECURITY_SCHEME_UNSPECIFIED     SecuritySchemeType = 0
	SecuritySchemeType_SECURITY_SCHEME_API_KEY         SecuritySchemeType = 1
	SecuritySchemeType_SECURITY_SCHEME_HTTP            SecuritySchemeType = 2
	SecuritySchemeType_SECURITY_SCHEME_OAUTH2          SecuritySchemeType = 3
	SecuritySchemeType_SECURITY_SCHEME_OPEN_ID_CONNECT SecuritySchemeType = 4
)

// Enum value maps for SecuritySchemeType.
var (
	SecuritySchemeType_name = map[int32]string{
		0: "SECURITY_SCHEME_UNSPECIFIED",
		1: "SECURITY_SCHEME_API_KEY",
		2: "SECURITY_SCHEME_HTTP",
		3: "SECURITY_SCHEME_OAUTH2",
		4: "SECURITY_SCHEME_OPEN_ID_CONNECT",
	}
	SecuritySchemeType_value = map[string]int32{
		"SECURITY_SCHEME_UNSPECIFIED":     0,
		"SECURITY_SCHEME_API_KEY":         1,
		"SECURITY_SCHEME_HTTP":            2,
		"SECURITY_SCHEME_OAUTH2":          3,
		"SECURITY_SCHEME_OPEN_ID_CONNECT": 4,
	}
)

func (x SecuritySchemeType) Enum() *SecuritySchemeType {
	p := new(SecuritySchemeType)
	*p = x
	return p
}

func (x SecuritySchemeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecuritySchemeType) Descriptor() protoreflect.EnumDescriptor {
	return file_krill_proto_enumTypes[0].Descriptor()
}

func (SecuritySchemeType) Type() protoreflect.EnumType {
	return &file_krill_proto_enumTypes[0]
}

func (x SecuritySchemeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SecuritySchemeType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SecuritySchemeType(num)
	return nil
}

// Deprecated: Use SecuritySchemeType.Descriptor instead.
func (SecuritySchemeType) EnumDescriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{0}
}

type SecuritySchemeScheme int32

const (
	SecuritySchemeScheme_SECURITY_SCHEME_SCHEME_UNSPECIFIED SecuritySchemeScheme = 0
	SecuritySchemeScheme_SECURITY_SCHEME_SCHEME_BASIC       SecuritySchemeScheme = 1
	SecuritySchemeScheme_SECURITY_SCHEME_SCHEME_BEARER      SecuritySchemeScheme = 3
	SecuritySchemeScheme_SECURITY_SCHEME_SCHEME_DIGEST      SecuritySchemeScheme = 4
	SecuritySchemeScheme_SECURITY_SCHEME_SCHEME_OAUTH       SecuritySchemeScheme = 5
)

// Enum value maps for SecuritySchemeScheme.
var (
	SecuritySchemeScheme_name = map[int32]string{
		0: "SECURITY_SCHEME_SCHEME_UNSPECIFIED",
		1: "SECURITY_SCHEME_SCHEME_BASIC",
		3: "SECURITY_SCHEME_SCHEME_BEARER",
		4: "SECURITY_SCHEME_SCHEME_DIGEST",
		5: "SECURITY_SCHEME_SCHEME_OAUTH",
	}
	SecuritySchemeScheme_value = map[string]int32{
		"SECURITY_SCHEME_SCHEME_UNSPECIFIED": 0,
		"SECURITY_SCHEME_SCHEME_BASIC":       1,
		"SECURITY_SCHEME_SCHEME_BEARER":      3,
		"SECURITY_SCHEME_SCHEME_DIGEST":      4,
		"SECURITY_SCHEME_SCHEME_OAUTH":       5,
	}
)

func (x SecuritySchemeScheme) Enum() *SecuritySchemeScheme {
	p := new(SecuritySchemeScheme)
	*p = x
	return p
}

func (x SecuritySchemeScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecuritySchemeScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_krill_proto_enumTypes[1].Descriptor()
}

func (SecuritySchemeScheme) Type() protoreflect.EnumType {
	return &file_krill_proto_enumTypes[1]
}

func (x SecuritySchemeScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SecuritySchemeScheme) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SecuritySchemeScheme(num)
	return nil
}

// Deprecated: Use SecuritySchemeScheme.Descriptor instead.
func (SecuritySchemeScheme) EnumDescriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{1}
}

type SecuritySchemeBearerFormat int32

const (
	SecuritySchemeBearerFormat_SECURITY_SCHEME_BEARER_FORMAT_UNSPECIFIED SecuritySchemeBearerFormat = 0
	SecuritySchemeBearerFormat_SECURITY_SCHEME_BEARER_FORMAT_JWT         SecuritySchemeBearerFormat = 1
)

// Enum value maps for SecuritySchemeBearerFormat.
var (
	SecuritySchemeBearerFormat_name = map[int32]string{
		0: "SECURITY_SCHEME_BEARER_FORMAT_UNSPECIFIED",
		1: "SECURITY_SCHEME_BEARER_FORMAT_JWT",
	}
	SecuritySchemeBearerFormat_value = map[string]int32{
		"SECURITY_SCHEME_BEARER_FORMAT_UNSPECIFIED": 0,
		"SECURITY_SCHEME_BEARER_FORMAT_JWT":         1,
	}
)

func (x SecuritySchemeBearerFormat) Enum() *SecuritySchemeBearerFormat {
	p := new(SecuritySchemeBearerFormat)
	*p = x
	return p
}

func (x SecuritySchemeBearerFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecuritySchemeBearerFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_krill_proto_enumTypes[2].Descriptor()
}

func (SecuritySchemeBearerFormat) Type() protoreflect.EnumType {
	return &file_krill_proto_enumTypes[2]
}

func (x SecuritySchemeBearerFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SecuritySchemeBearerFormat) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SecuritySchemeBearerFormat(num)
	return nil
}

// Deprecated: Use SecuritySchemeBearerFormat.Descriptor instead.
func (SecuritySchemeBearerFormat) EnumDescriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{2}
}

type ParameterType int32

const (
	ParameterType_PARAMETER_TYPE_UNSPECIFIED ParameterType = 0
	ParameterType_PARAMETER_TYPE_STRING      ParameterType = 1
	ParameterType_PARAMETER_TYPE_NUMBER      ParameterType = 2
)

// Enum value maps for ParameterType.
var (
	ParameterType_name = map[int32]string{
		0: "PARAMETER_TYPE_UNSPECIFIED",
		1: "PARAMETER_TYPE_STRING",
		2: "PARAMETER_TYPE_NUMBER",
	}
	ParameterType_value = map[string]int32{
		"PARAMETER_TYPE_UNSPECIFIED": 0,
		"PARAMETER_TYPE_STRING":      1,
		"PARAMETER_TYPE_NUMBER":      2,
	}
)

func (x ParameterType) Enum() *ParameterType {
	p := new(ParameterType)
	*p = x
	return p
}

func (x ParameterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParameterType) Descriptor() protoreflect.EnumDescriptor {
	return file_krill_proto_enumTypes[3].Descriptor()
}

func (ParameterType) Type() protoreflect.EnumType {
	return &file_krill_proto_enumTypes[3]
}

func (x ParameterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ParameterType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ParameterType(num)
	return nil
}

// Deprecated: Use ParameterType.Descriptor instead.
func (ParameterType) EnumDescriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{3}
}

type ResponseCode int32

const (
	ResponseCode_RESPONSE_CODE_OK                  ResponseCode = 0
	ResponseCode_RESPONSE_CODE_NOT_FOUND           ResponseCode = 1
	ResponseCode_RESPONSE_CODE_UNAUTHORIZED        ResponseCode = 2
	ResponseCode_RESPONSE_CODE_BAD_REQUEST         ResponseCode = 3
	ResponseCode_RESPONSE_CODE_PRECONDITION_FAILED ResponseCode = 4
	ResponseCode_RESPONSE_CODE_INTERNAL_ERROR      ResponseCode = 5
)

// Enum value maps for ResponseCode.
var (
	ResponseCode_name = map[int32]string{
		0: "RESPONSE_CODE_OK",
		1: "RESPONSE_CODE_NOT_FOUND",
		2: "RESPONSE_CODE_UNAUTHORIZED",
		3: "RESPONSE_CODE_BAD_REQUEST",
		4: "RESPONSE_CODE_PRECONDITION_FAILED",
		5: "RESPONSE_CODE_INTERNAL_ERROR",
	}
	ResponseCode_value = map[string]int32{
		"RESPONSE_CODE_OK":                  0,
		"RESPONSE_CODE_NOT_FOUND":           1,
		"RESPONSE_CODE_UNAUTHORIZED":        2,
		"RESPONSE_CODE_BAD_REQUEST":         3,
		"RESPONSE_CODE_PRECONDITION_FAILED": 4,
		"RESPONSE_CODE_INTERNAL_ERROR":      5,
	}
)

func (x ResponseCode) Enum() *ResponseCode {
	p := new(ResponseCode)
	*p = x
	return p
}

func (x ResponseCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseCode) Descriptor() protoreflect.EnumDescriptor {
	return file_krill_proto_enumTypes[4].Descriptor()
}

func (ResponseCode) Type() protoreflect.EnumType {
	return &file_krill_proto_enumTypes[4]
}

func (x ResponseCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ResponseCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ResponseCode(num)
	return nil
}

// Deprecated: Use ResponseCode.Descriptor instead.
func (ResponseCode) EnumDescriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{4}
}

type PropertyFormat int32

const (
	PropertyFormat_PROPERTY_FORMAT_UNSPECIFIED PropertyFormat = 0
	PropertyFormat_PROPERTY_FORMAT_INT32       PropertyFormat = 1
	PropertyFormat_PROPERTY_FORMAT_INT64       PropertyFormat = 2
	PropertyFormat_PROPERTY_FORMAT_FLOAT       PropertyFormat = 3
	PropertyFormat_PROPERTY_FORMAT_DOUBLE      PropertyFormat = 4
	PropertyFormat_PROPERTY_FORMAT_BYTE        PropertyFormat = 5
	PropertyFormat_PROPERTY_FORMAT_BINARY      PropertyFormat = 6
	PropertyFormat_PROPERTY_FORMAT_DATE        PropertyFormat = 7
	PropertyFormat_PROPERTY_FORMAT_DATE_TIME   PropertyFormat = 8
	PropertyFormat_PROPERTY_FORMAT_PASSWORD    PropertyFormat = 9
	PropertyFormat_PROPERTY_FORMAT_STRING      PropertyFormat = 10
)

// Enum value maps for PropertyFormat.
var (
	PropertyFormat_name = map[int32]string{
		0:  "PROPERTY_FORMAT_UNSPECIFIED",
		1:  "PROPERTY_FORMAT_INT32",
		2:  "PROPERTY_FORMAT_INT64",
		3:  "PROPERTY_FORMAT_FLOAT",
		4:  "PROPERTY_FORMAT_DOUBLE",
		5:  "PROPERTY_FORMAT_BYTE",
		6:  "PROPERTY_FORMAT_BINARY",
		7:  "PROPERTY_FORMAT_DATE",
		8:  "PROPERTY_FORMAT_DATE_TIME",
		9:  "PROPERTY_FORMAT_PASSWORD",
		10: "PROPERTY_FORMAT_STRING",
	}
	PropertyFormat_value = map[string]int32{
		"PROPERTY_FORMAT_UNSPECIFIED": 0,
		"PROPERTY_FORMAT_INT32":       1,
		"PROPERTY_FORMAT_INT64":       2,
		"PROPERTY_FORMAT_FLOAT":       3,
		"PROPERTY_FORMAT_DOUBLE":      4,
		"PROPERTY_FORMAT_BYTE":        5,
		"PROPERTY_FORMAT_BINARY":      6,
		"PROPERTY_FORMAT_DATE":        7,
		"PROPERTY_FORMAT_DATE_TIME":   8,
		"PROPERTY_FORMAT_PASSWORD":    9,
		"PROPERTY_FORMAT_STRING":      10,
	}
)

func (x PropertyFormat) Enum() *PropertyFormat {
	p := new(PropertyFormat)
	*p = x
	return p
}

func (x PropertyFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PropertyFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_krill_proto_enumTypes[5].Descriptor()
}

func (PropertyFormat) Type() protoreflect.EnumType {
	return &file_krill_proto_enumTypes[5]
}

func (x PropertyFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PropertyFormat) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PropertyFormat(num)
	return nil
}

// Deprecated: Use PropertyFormat.Descriptor instead.
func (PropertyFormat) EnumDescriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{5}
}

type PropertyLocation int32

const (
	PropertyLocation_PROPERTY_LOCATION_BODY   PropertyLocation = 0
	PropertyLocation_PROPERTY_LOCATION_HEADER PropertyLocation = 1
	PropertyLocation_PROPERTY_LOCATION_PATH   PropertyLocation = 2
	PropertyLocation_PROPERTY_LOCATION_QUERY  PropertyLocation = 3
)

// Enum value maps for PropertyLocation.
var (
	PropertyLocation_name = map[int32]string{
		0: "PROPERTY_LOCATION_BODY",
		1: "PROPERTY_LOCATION_HEADER",
		2: "PROPERTY_LOCATION_PATH",
		3: "PROPERTY_LOCATION_QUERY",
	}
	PropertyLocation_value = map[string]int32{
		"PROPERTY_LOCATION_BODY":   0,
		"PROPERTY_LOCATION_HEADER": 1,
		"PROPERTY_LOCATION_PATH":   2,
		"PROPERTY_LOCATION_QUERY":  3,
	}
)

func (x PropertyLocation) Enum() *PropertyLocation {
	p := new(PropertyLocation)
	*p = x
	return p
}

func (x PropertyLocation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PropertyLocation) Descriptor() protoreflect.EnumDescriptor {
	return file_krill_proto_enumTypes[6].Descriptor()
}

func (PropertyLocation) Type() protoreflect.EnumType {
	return &file_krill_proto_enumTypes[6]
}

func (x PropertyLocation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PropertyLocation) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PropertyLocation(num)
	return nil
}

// Deprecated: Use PropertyLocation.Descriptor instead.
func (PropertyLocation) EnumDescriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{6}
}

type OpenapiServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         *string `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (x *OpenapiServer) Reset() {
	*x = OpenapiServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenapiServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenapiServer) ProtoMessage() {}

func (x *OpenapiServer) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenapiServer.ProtoReflect.Descriptor instead.
func (*OpenapiServer) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{0}
}

func (x *OpenapiServer) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *OpenapiServer) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *Database) Reset() {
	*x = Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database) ProtoMessage() {}

func (x *Database) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database.ProtoReflect.Descriptor instead.
func (*Database) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{1}
}

func (x *Database) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Http           *ServiceHttp    `protobuf:"bytes,1,opt,name=http" json:"http,omitempty"`
	SecurityScheme *SecurityScheme `protobuf:"bytes,2,opt,name=security_scheme,json=securityScheme" json:"security_scheme,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{2}
}

func (x *Service) GetHttp() *ServiceHttp {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Service) GetSecurityScheme() *SecurityScheme {
	if x != nil {
		return x.SecurityScheme
	}
	return nil
}

type Method struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Http *MethodHttp `protobuf:"bytes,1,opt,name=http" json:"http,omitempty"`
}

func (x *Method) Reset() {
	*x = Method{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Method) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Method) ProtoMessage() {}

func (x *Method) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Method.ProtoReflect.Descriptor instead.
func (*Method) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{3}
}

func (x *Method) GetHttp() *MethodHttp {
	if x != nil {
		return x.Http
	}
	return nil
}

type MethodHttp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoAuth *bool        `protobuf:"varint,1,opt,name=no_auth,json=noAuth" json:"no_auth,omitempty"`
	Scope  []string     `protobuf:"bytes,2,rep,name=scope" json:"scope,omitempty"`
	Header []*Parameter `protobuf:"bytes,3,rep,name=header" json:"header,omitempty"`
}

func (x *MethodHttp) Reset() {
	*x = MethodHttp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodHttp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodHttp) ProtoMessage() {}

func (x *MethodHttp) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodHttp.ProtoReflect.Descriptor instead.
func (*MethodHttp) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{4}
}

func (x *MethodHttp) GetNoAuth() bool {
	if x != nil && x.NoAuth != nil {
		return *x.NoAuth
	}
	return false
}

func (x *MethodHttp) GetScope() []string {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *MethodHttp) GetHeader() []*Parameter {
	if x != nil {
		return x.Header
	}
	return nil
}

type ServiceHttp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header []*Parameter `protobuf:"bytes,1,rep,name=header" json:"header,omitempty"`
}

func (x *ServiceHttp) Reset() {
	*x = ServiceHttp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceHttp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceHttp) ProtoMessage() {}

func (x *ServiceHttp) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceHttp.ProtoReflect.Descriptor instead.
func (*ServiceHttp) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{5}
}

func (x *ServiceHttp) GetHeader() []*Parameter {
	if x != nil {
		return x.Header
	}
	return nil
}

type SecurityScheme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         *SecuritySchemeType         `protobuf:"varint,1,req,name=type,enum=krill.SecuritySchemeType" json:"type,omitempty"`
	Description  *string                     `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Name         *string                     `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	In           *string                     `protobuf:"bytes,4,opt,name=in" json:"in,omitempty"`
	Scheme       *SecuritySchemeScheme       `protobuf:"varint,5,opt,name=scheme,enum=krill.SecuritySchemeScheme" json:"scheme,omitempty"`
	BearerFormat *SecuritySchemeBearerFormat `protobuf:"varint,6,opt,name=bearer_format,json=bearerFormat,enum=krill.SecuritySchemeBearerFormat" json:"bearer_format,omitempty"`
}

func (x *SecurityScheme) Reset() {
	*x = SecurityScheme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityScheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityScheme) ProtoMessage() {}

func (x *SecurityScheme) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityScheme.ProtoReflect.Descriptor instead.
func (*SecurityScheme) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{6}
}

func (x *SecurityScheme) GetType() SecuritySchemeType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return SecuritySchemeType_SECURITY_SCHEME_UNSPECIFIED
}

func (x *SecurityScheme) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *SecurityScheme) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SecurityScheme) GetIn() string {
	if x != nil && x.In != nil {
		return *x.In
	}
	return ""
}

func (x *SecurityScheme) GetScheme() SecuritySchemeScheme {
	if x != nil && x.Scheme != nil {
		return *x.Scheme
	}
	return SecuritySchemeScheme_SECURITY_SCHEME_SCHEME_UNSPECIFIED
}

func (x *SecurityScheme) GetBearerFormat() SecuritySchemeBearerFormat {
	if x != nil && x.BearerFormat != nil {
		return *x.BearerFormat
	}
	return SecuritySchemeBearerFormat_SECURITY_SCHEME_BEARER_FORMAT_UNSPECIFIED
}

type Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string        `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Type     *ParameterType `protobuf:"varint,2,opt,name=type,enum=krill.ParameterType" json:"type,omitempty"`
	Required *bool          `protobuf:"varint,3,opt,name=required" json:"required,omitempty"`
}

func (x *Parameter) Reset() {
	*x = Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter) ProtoMessage() {}

func (x *Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter.ProtoReflect.Descriptor instead.
func (*Parameter) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{7}
}

func (x *Parameter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Parameter) GetType() ParameterType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ParameterType_PARAMETER_TYPE_UNSPECIFIED
}

func (x *Parameter) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

type OpenapiMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     *Path       `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Response []*Response `protobuf:"bytes,2,rep,name=response" json:"response,omitempty"`
}

func (x *OpenapiMethod) Reset() {
	*x = OpenapiMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenapiMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenapiMethod) ProtoMessage() {}

func (x *OpenapiMethod) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenapiMethod.ProtoReflect.Descriptor instead.
func (*OpenapiMethod) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{8}
}

func (x *OpenapiMethod) GetPath() *Path {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *OpenapiMethod) GetResponse() []*Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary     *string  `protobuf:"bytes,1,req,name=summary" json:"summary,omitempty"`
	Description *string  `protobuf:"bytes,2,req,name=description" json:"description,omitempty"`
	Tags        []string `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
}

func (x *Path) Reset() {
	*x = Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{9}
}

func (x *Path) GetSummary() string {
	if x != nil && x.Summary != nil {
		return *x.Summary
	}
	return ""
}

func (x *Path) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Path) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        *ResponseCode `protobuf:"varint,1,req,name=code,enum=krill.ResponseCode" json:"code,omitempty"`
	Description *string       `protobuf:"bytes,2,req,name=description" json:"description,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{10}
}

func (x *Response) GetCode() ResponseCode {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ResponseCode_RESPONSE_CODE_OK
}

func (x *Response) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type OpenapiMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation *Operation `protobuf:"bytes,1,req,name=operation" json:"operation,omitempty"`
}

func (x *OpenapiMessage) Reset() {
	*x = OpenapiMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenapiMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenapiMessage) ProtoMessage() {}

func (x *OpenapiMessage) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenapiMessage.ProtoReflect.Descriptor instead.
func (*OpenapiMessage) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{11}
}

func (x *OpenapiMessage) GetOperation() *Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBody *RequestBody `protobuf:"bytes,1,req,name=request_body,json=requestBody" json:"request_body,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{12}
}

func (x *Operation) GetRequestBody() *RequestBody {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

type RequestBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *string `protobuf:"bytes,1,req,name=description" json:"description,omitempty"`
}

func (x *RequestBody) Reset() {
	*x = RequestBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestBody) ProtoMessage() {}

func (x *RequestBody) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestBody.ProtoReflect.Descriptor instead.
func (*RequestBody) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{13}
}

func (x *RequestBody) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type OpenapiField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Property *Property `protobuf:"bytes,1,req,name=property" json:"property,omitempty"`
}

func (x *OpenapiField) Reset() {
	*x = OpenapiField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenapiField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenapiField) ProtoMessage() {}

func (x *OpenapiField) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenapiField.ProtoReflect.Descriptor instead.
func (*OpenapiField) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{14}
}

func (x *OpenapiField) GetProperty() *Property {
	if x != nil {
		return x.Property
	}
	return nil
}

type Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description    *string           `protobuf:"bytes,1,req,name=description" json:"description,omitempty"`
	Example        *string           `protobuf:"bytes,2,opt,name=example" json:"example,omitempty"`
	Format         *PropertyFormat   `protobuf:"varint,3,req,name=format,enum=krill.PropertyFormat" json:"format,omitempty"`
	HideFromSchema *bool             `protobuf:"varint,4,opt,name=hide_from_schema,json=hideFromSchema" json:"hide_from_schema,omitempty"`
	Location       *PropertyLocation `protobuf:"varint,5,opt,name=location,enum=krill.PropertyLocation" json:"location,omitempty"`
	Required       *bool             `protobuf:"varint,6,opt,name=required" json:"required,omitempty"`
}

func (x *Property) Reset() {
	*x = Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_krill_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_krill_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_krill_proto_rawDescGZIP(), []int{15}
}

func (x *Property) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Property) GetExample() string {
	if x != nil && x.Example != nil {
		return *x.Example
	}
	return ""
}

func (x *Property) GetFormat() PropertyFormat {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return PropertyFormat_PROPERTY_FORMAT_UNSPECIFIED
}

func (x *Property) GetHideFromSchema() bool {
	if x != nil && x.HideFromSchema != nil {
		return *x.HideFromSchema
	}
	return false
}

func (x *Property) GetLocation() PropertyLocation {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return PropertyLocation_PROPERTY_LOCATION_BODY
}

func (x *Property) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

var file_krill_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         66041,
		Name:          "krill.krill_app_name",
		Tag:           "bytes,66041,opt,name=krill_app_name",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         66042,
		Name:          "krill.krill_openapi_title",
		Tag:           "bytes,66042,opt,name=krill_openapi_title",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         66043,
		Name:          "krill.krill_openapi_version",
		Tag:           "bytes,66043,opt,name=krill_openapi_version",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: ([]*OpenapiServer)(nil),
		Field:         66044,
		Name:          "krill.krill_openapi_server",
		Tag:           "bytes,66044,rep,name=krill_openapi_server",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*Service)(nil),
		Field:         66041,
		Name:          "krill.service",
		Tag:           "bytes,66041,opt,name=service",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*Method)(nil),
		Field:         66041,
		Name:          "krill.method",
		Tag:           "bytes,66041,opt,name=method",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*OpenapiMethod)(nil),
		Field:         66042,
		Name:          "krill.openapi_method",
		Tag:           "bytes,66042,opt,name=openapi_method",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*OpenapiMessage)(nil),
		Field:         66041,
		Name:          "krill.openapi_message",
		Tag:           "bytes,66041,opt,name=openapi_message",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*Database)(nil),
		Field:         66041,
		Name:          "krill.database",
		Tag:           "bytes,66041,opt,name=database",
		Filename:      "krill.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*OpenapiField)(nil),
		Field:         66042,
		Name:          "krill.openapi",
		Tag:           "bytes,66042,opt,name=openapi",
		Filename:      "krill.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional string krill_app_name = 66041;
	E_KrillAppName = &file_krill_proto_extTypes[0]
	// optional string krill_openapi_title = 66042;
	E_KrillOpenapiTitle = &file_krill_proto_extTypes[1]
	// optional string krill_openapi_version = 66043;
	E_KrillOpenapiVersion = &file_krill_proto_extTypes[2]
	// repeated krill.OpenapiServer krill_openapi_server = 66044;
	E_KrillOpenapiServer = &file_krill_proto_extTypes[3]
)

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional krill.Service service = 66041;
	E_Service = &file_krill_proto_extTypes[4]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional krill.Method method = 66041;
	E_Method = &file_krill_proto_extTypes[5]
	// optional krill.OpenapiMethod openapi_method = 66042;
	E_OpenapiMethod = &file_krill_proto_extTypes[6]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional krill.OpenapiMessage openapi_message = 66041;
	E_OpenapiMessage = &file_krill_proto_extTypes[7]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional krill.Database database = 66041;
	E_Database = &file_krill_proto_extTypes[8]
	// optional krill.OpenapiField openapi = 66042;
	E_Openapi = &file_krill_proto_extTypes[9]
)

var File_krill_proto protoreflect.FileDescriptor

var file_krill_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6b,
	0x72, 0x69, 0x6c, 0x6c, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x08, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x71, 0x0a, 0x07, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x48, 0x74, 0x74, 0x70, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x3e,
	0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x0e,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x22, 0x2f,
	0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x74, 0x74, 0x70, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x22,
	0x65, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x74, 0x74, 0x70, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x6e, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b,
	0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x37, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x48, 0x74, 0x74, 0x70, 0x12, 0x28, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22,
	0x82, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x0d,
	0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0c, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0x65, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x5d, 0x0a, 0x0d, 0x4f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x72, 0x69,
	0x6c, 0x6c, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x0a, 0x04, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x22, 0x55, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b,
	0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x0e, 0x4f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x09, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f,
	0x64, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x22,
	0x2f, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x3b, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0xf0, 0x01,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x68, 0x69, 0x64, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x2a, 0xad, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x45, 0x43, 0x55, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x45, 0x43, 0x55,
	0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x41, 0x50, 0x49, 0x5f,
	0x4b, 0x45, 0x59, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54,
	0x59, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x10, 0x02, 0x12,
	0x1a, 0x0a, 0x16, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x43, 0x48, 0x45,
	0x4d, 0x45, 0x5f, 0x4f, 0x41, 0x55, 0x54, 0x48, 0x32, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x53,
	0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x4f,
	0x50, 0x45, 0x4e, 0x5f, 0x49, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x04,
	0x2a, 0xc8, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x53, 0x45, 0x43,
	0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x53, 0x43, 0x48,
	0x45, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x43,
	0x48, 0x45, 0x4d, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x42, 0x41, 0x53, 0x49,
	0x43, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f,
	0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x42, 0x45,
	0x41, 0x52, 0x45, 0x52, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45,
	0x5f, 0x44, 0x49, 0x47, 0x45, 0x53, 0x54, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x45, 0x43,
	0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x53, 0x43, 0x48,
	0x45, 0x4d, 0x45, 0x5f, 0x4f, 0x41, 0x55, 0x54, 0x48, 0x10, 0x05, 0x2a, 0x72, 0x0a, 0x1a, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x42, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2d, 0x0a, 0x29, 0x53, 0x45, 0x43,
	0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x42, 0x45, 0x41,
	0x52, 0x45, 0x52, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x45, 0x43, 0x55,
	0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x42, 0x45, 0x41, 0x52,
	0x45, 0x52, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x4a, 0x57, 0x54, 0x10, 0x01, 0x2a,
	0x65, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x2a, 0xc9, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x1b, 0x0a,
	0x17, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x55,
	0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x41, 0x44, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x03, 0x12, 0x25, 0x0a, 0x21, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x05, 0x2a, 0xc7, 0x02, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54,
	0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52,
	0x54, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f,
	0x52, 0x4d, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15,
	0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f,
	0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x50, 0x45,
	0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c,
	0x45, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x10, 0x05, 0x12, 0x1a, 0x0a,
	0x16, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
	0x5f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f,
	0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x44, 0x41, 0x54,
	0x45, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x09,
	0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4f, 0x52,
	0x4d, 0x41, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x0a, 0x2a, 0x85, 0x01, 0x0a,
	0x10, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x4c, 0x4f,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x00, 0x12, 0x1c, 0x0a,
	0x18, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x50,
	0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x50, 0x41, 0x54, 0x48, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x4f, 0x50, 0x45,
	0x52, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45,
	0x52, 0x59, 0x10, 0x03, 0x3a, 0x44, 0x0a, 0x0e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf9, 0x83, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x72,
	0x69, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x4e, 0x0a, 0x13, 0x6b, 0x72,
	0x69, 0x6c, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xfa, 0x83, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x4f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x3a, 0x52, 0x0a, 0x15, 0x6b, 0x72,
	0x69, 0x6c, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xfb, 0x83, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6b, 0x72, 0x69, 0x6c, 0x6c,
	0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x66,
	0x0a, 0x14, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfc, 0x83, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b,
	0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x12, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x3a, 0x4b, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xf9, 0x83, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x72, 0x69,
	0x6c, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x3a, 0x47, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf9, 0x83,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x5d, 0x0a, 0x0e,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfa,
	0x83, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x61, 0x0a, 0x0f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xf9, 0x83, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x4c,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf9, 0x83, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x3a, 0x4e, 0x0a, 0x07,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfa, 0x83, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x42, 0x46, 0x5a, 0x44,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x73, 0x66, 0x72, 0x65,
	0x69, 0x74, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x2d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6b, 0x72, 0x69, 0x6c, 0x6c, 0x3b, 0x6b,
	0x72, 0x69, 0x6c, 0x6c,
}

var (
	file_krill_proto_rawDescOnce sync.Once
	file_krill_proto_rawDescData = file_krill_proto_rawDesc
)

func file_krill_proto_rawDescGZIP() []byte {
	file_krill_proto_rawDescOnce.Do(func() {
		file_krill_proto_rawDescData = protoimpl.X.CompressGZIP(file_krill_proto_rawDescData)
	})
	return file_krill_proto_rawDescData
}

var file_krill_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_krill_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_krill_proto_goTypes = []interface{}{
	(SecuritySchemeType)(0),             // 0: krill.SecuritySchemeType
	(SecuritySchemeScheme)(0),           // 1: krill.SecuritySchemeScheme
	(SecuritySchemeBearerFormat)(0),     // 2: krill.SecuritySchemeBearerFormat
	(ParameterType)(0),                  // 3: krill.ParameterType
	(ResponseCode)(0),                   // 4: krill.ResponseCode
	(PropertyFormat)(0),                 // 5: krill.PropertyFormat
	(PropertyLocation)(0),               // 6: krill.PropertyLocation
	(*OpenapiServer)(nil),               // 7: krill.OpenapiServer
	(*Database)(nil),                    // 8: krill.Database
	(*Service)(nil),                     // 9: krill.Service
	(*Method)(nil),                      // 10: krill.Method
	(*MethodHttp)(nil),                  // 11: krill.MethodHttp
	(*ServiceHttp)(nil),                 // 12: krill.ServiceHttp
	(*SecurityScheme)(nil),              // 13: krill.SecurityScheme
	(*Parameter)(nil),                   // 14: krill.Parameter
	(*OpenapiMethod)(nil),               // 15: krill.OpenapiMethod
	(*Path)(nil),                        // 16: krill.Path
	(*Response)(nil),                    // 17: krill.Response
	(*OpenapiMessage)(nil),              // 18: krill.OpenapiMessage
	(*Operation)(nil),                   // 19: krill.Operation
	(*RequestBody)(nil),                 // 20: krill.RequestBody
	(*OpenapiField)(nil),                // 21: krill.OpenapiField
	(*Property)(nil),                    // 22: krill.Property
	(*descriptorpb.FileOptions)(nil),    // 23: google.protobuf.FileOptions
	(*descriptorpb.ServiceOptions)(nil), // 24: google.protobuf.ServiceOptions
	(*descriptorpb.MethodOptions)(nil),  // 25: google.protobuf.MethodOptions
	(*descriptorpb.MessageOptions)(nil), // 26: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 27: google.protobuf.FieldOptions
}
var file_krill_proto_depIdxs = []int32{
	12, // 0: krill.Service.http:type_name -> krill.ServiceHttp
	13, // 1: krill.Service.security_scheme:type_name -> krill.SecurityScheme
	11, // 2: krill.Method.http:type_name -> krill.MethodHttp
	14, // 3: krill.MethodHttp.header:type_name -> krill.Parameter
	14, // 4: krill.ServiceHttp.header:type_name -> krill.Parameter
	0,  // 5: krill.SecurityScheme.type:type_name -> krill.SecuritySchemeType
	1,  // 6: krill.SecurityScheme.scheme:type_name -> krill.SecuritySchemeScheme
	2,  // 7: krill.SecurityScheme.bearer_format:type_name -> krill.SecuritySchemeBearerFormat
	3,  // 8: krill.Parameter.type:type_name -> krill.ParameterType
	16, // 9: krill.OpenapiMethod.path:type_name -> krill.Path
	17, // 10: krill.OpenapiMethod.response:type_name -> krill.Response
	4,  // 11: krill.Response.code:type_name -> krill.ResponseCode
	19, // 12: krill.OpenapiMessage.operation:type_name -> krill.Operation
	20, // 13: krill.Operation.request_body:type_name -> krill.RequestBody
	22, // 14: krill.OpenapiField.property:type_name -> krill.Property
	5,  // 15: krill.Property.format:type_name -> krill.PropertyFormat
	6,  // 16: krill.Property.location:type_name -> krill.PropertyLocation
	23, // 17: krill.krill_app_name:extendee -> google.protobuf.FileOptions
	23, // 18: krill.krill_openapi_title:extendee -> google.protobuf.FileOptions
	23, // 19: krill.krill_openapi_version:extendee -> google.protobuf.FileOptions
	23, // 20: krill.krill_openapi_server:extendee -> google.protobuf.FileOptions
	24, // 21: krill.service:extendee -> google.protobuf.ServiceOptions
	25, // 22: krill.method:extendee -> google.protobuf.MethodOptions
	25, // 23: krill.openapi_method:extendee -> google.protobuf.MethodOptions
	26, // 24: krill.openapi_message:extendee -> google.protobuf.MessageOptions
	27, // 25: krill.database:extendee -> google.protobuf.FieldOptions
	27, // 26: krill.openapi:extendee -> google.protobuf.FieldOptions
	7,  // 27: krill.krill_openapi_server:type_name -> krill.OpenapiServer
	9,  // 28: krill.service:type_name -> krill.Service
	10, // 29: krill.method:type_name -> krill.Method
	15, // 30: krill.openapi_method:type_name -> krill.OpenapiMethod
	18, // 31: krill.openapi_message:type_name -> krill.OpenapiMessage
	8,  // 32: krill.database:type_name -> krill.Database
	21, // 33: krill.openapi:type_name -> krill.OpenapiField
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	27, // [27:34] is the sub-list for extension type_name
	17, // [17:27] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_krill_proto_init() }
func file_krill_proto_init() {
	if File_krill_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_krill_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenapiServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Method); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MethodHttp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceHttp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityScheme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenapiMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenapiMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenapiField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_krill_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_krill_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   16,
			NumExtensions: 10,
			NumServices:   0,
		},
		GoTypes:           file_krill_proto_goTypes,
		DependencyIndexes: file_krill_proto_depIdxs,
		EnumInfos:         file_krill_proto_enumTypes,
		MessageInfos:      file_krill_proto_msgTypes,
		ExtensionInfos:    file_krill_proto_extTypes,
	}.Build()
	File_krill_proto = out.File
	file_krill_proto_rawDesc = nil
	file_krill_proto_goTypes = nil
	file_krill_proto_depIdxs = nil
}
